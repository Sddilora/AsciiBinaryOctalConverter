name: Create Release

on:
  push:
    branches: [Converter]

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: GOOS=linux GOARCH=amd64 go build -o bin/app-amd64-linux main.go
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Generate unique tag
        id: gen_tag
        run: echo ::set-output name=tag::$(date "+%m.%d-%H")
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gen_tag.outputs.tag }}
          release_name: Release ${{ steps.gen_tag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./api
          asset_name: api.exe
          asset_content_type: application/octet-stream
